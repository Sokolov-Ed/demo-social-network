{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","icons/notLiked.png","icons/liked.png","icons/deleteIcon.png","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileData/Contact.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","authorField","photoUser","src","userPhoto","photoDefault","postAuthor","userLogin","onClick","idPost","postId","deletePost","deleteIcon","message","postMessage","photoURL","postPhoto","postLike","isMyLike","liked","notLiked","addLike","likesCount","quantityLikes","AddPostReduxForm","maxLengthCreator","reduxForm","form","validate","values","errors","newPostText","photo","onSubmit","handleSubmit","inputsField","Field","component","Textarea","name","placeholder","type","InputPhoto","submitButton","MyPosts","profileId","userId","postsElements","posts","reverse","filter","p","postOnIdProfile","map","id","postsBlock","addPostField","length","notPosts","dispatch","text","document","getElementById","style","backgroundColor","reset","addPost","auth","login","URL","createObjectURL","postsField","MyPostsContainer","connect","state","profilePage","profile","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","statusForm","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","fieldStatus","onDoubleClick","Contact","contactTitle","contactValue","ProfileDataReduxForm","error","Object","keys","contacts","key","EditProfileData","formData","saveProfile","then","exitOfEditMode","ProfileData","isOwner","goToEditMode","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo","savePhoto","profileInfo","descriptionBlock","photos","large","DefaultIcon","userName","fullName","target","files","aboutUser","initialValues","Profile","classForProfileInfo","ProfileContainer","this","match","params","userID","authorizedUserId","user","getStatus","refreshProfile","prevProps","prevState","Preloader","React","Component","compose","isAuth","withRouter","WithAuthRedirect"],"mappings":"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","file":"static/js/4.95deb989.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2GpXQ\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__B_MVT\",\"userName\":\"ProfileInfo_userName__2EWdc\",\"photoUser\":\"ProfileInfo_photoUser__20LnI\",\"aboutUser\":\"ProfileInfo_aboutUser__2gw2h\",\"fieldStatus\":\"ProfileInfo_fieldStatus__2V4j4\",\"statusForm\":\"ProfileInfo_statusForm__3MVNw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__35GIG\",\"posts\":\"MyPosts_posts__2EkbX\",\"addPostField\":\"MyPosts_addPostField__1Dke4\",\"notPosts\":\"MyPosts_notPosts__2p99g\",\"postsField\":\"MyPosts_postsField__1KSUr\",\"inputsField\":\"MyPosts_inputsField__2CDyi\",\"submitButton\":\"MyPosts_submitButton__7YQVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1ReU8\",\"authorField\":\"Post_authorField__Wi4lg\",\"postAuthor\":\"Post_postAuthor__2_wGK\",\"photoUser\":\"Post_photoUser__2BorF\",\"deleteIcon\":\"Post_deleteIcon__2kFok\",\"postMessage\":\"Post_postMessage__3G64y\",\"postLike\":\"Post_postLike__3bY9T\",\"postPhoto\":\"Post_postPhoto__gwgHk\",\"likesCount\":\"Post_likesCount__26PlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"classForProfileInfo\":\"Profile_classForProfileInfo__3yPKH\",\"postsField\":\"Profile_postsField__fROIp\"};","export default __webpack_public_path__ + \"static/media/notLiked.b4db63fd.png\";","export default __webpack_public_path__ + \"static/media/liked.4dabba7b.png\";","export default __webpack_public_path__ + \"static/media/deleteIcon.cc77b84b.png\";","import classes from './Post.module.css';\nimport photoDefault from '../../../../icons/default_icon_user.png';\nimport notLiked from '../../../../icons/notLiked.png';\nimport liked from '../../../../icons/liked.png';\nimport deleteIcon from '../../../../icons/deleteIcon.png';\n\nconst Post = (props) => {\n    const setLike = (idPost) => {\n        props.addLike(idPost);\n    }\n\n    const setDeleted = (idPost) => {\n        props.deletePost(idPost);\n    }\n\n    return (\n        <div className={classes.item}>\n            <div className={classes.authorField}>\n                <div className={classes.photoUser}>\n                    <img src={props.userPhoto ? props.userPhoto : photoDefault} />\n                </div>\n                <div className={classes.postAuthor}>\n                    {props.userLogin}\n                </div>\n                <div onClick={() => setDeleted(props.postId)} className={classes.deleteIcon}>\n                    <img src={deleteIcon} />\n                </div>\n            </div>\n            {props.message && <div className={classes.postMessage}>\n                {props.message}\n            </div>}\n            {props.photoURL && <div className={classes.postPhoto}>\n                <img src={props.photoURL} />\n            </div>}\n            <div className={classes.postLike}>\n                <div >\n                    <img src={!props.isMyLike ? notLiked : liked} onClick={() => setLike(props.postId)}/>\n                </div>\n                <div className={classes.likesCount}>{props.quantityLikes}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { reduxForm, Field, reset } from \"redux-form\";\nimport { required, maxLengthCreator } from '../../../Utils/Validators/Validator';\nimport { Input, InputPhoto, Textarea } from '../../Common/FormsControls/FormsControls';\nimport Preloader from '../../Common/Preloader/Preloader';\n\nconst validate = values => {\n    const errors = {};\n\n    if (!values.newPostText && !values.photo)\n        errors.newPostText = \"This field is empty\";\n    return errors;\n}\n\nconst MyPosts = (props) => {\n    let profileId = props.profileId && props.profileId.userId;\n    let postsElements = [...props.posts].reverse().filter(p => p.postOnIdProfile === profileId).map(p => (\n        <Post message={p.message} quantityLikes={p.likesCount} key={p.id} photoURL={p.photoURL} \n            userId={p.userId} userLogin={p.userLogin} userPhoto={p.userPhoto} postId={p.id} \n            addLike={props.addLike} isMyLike={p.isMyLike} deletePost={props.deletePost}/>));\n\n    let addNewPost = (values, dispatch) => {\n        let text = values.newPostText;\n        let photo = values.photo;\n        document.getElementById(\"loadingPhoto\").style.backgroundColor = \"\";\n        dispatch(reset(\"ProfileNewPostReduxForm\"));\n        props.addPost(profileId, props.auth.userId, props.auth.login, props.auth.photoUser, text, photo && URL.createObjectURL(photo));\n    }\n    return (\n        <div className={classes.postsBlock}>\n            <div className={classes.addPostField + \" \" + (props.posts.filter(p => p.postOnIdProfile === profileId).length === 0 && classes.notPosts)}>\n                <h3>Add post</h3>\n                <AddPostReduxForm onSubmit={addNewPost} />\n            </div>\n            {props.posts.filter(p => p.postOnIdProfile === profileId).length > 0 && <div className={classes.postsField}>\n                <h2>Posts</h2>\n                <div className={classes.posts}>\n                    {postsElements}\n                </div>\n            </div>}\n        </div>\n    )\n}\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst AddPost = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div className={classes.inputsField}>\n                <Field component={Textarea} name=\"newPostText\" placeholder=\"Input text\" />\n                <Field name=\"photo\" type=\"file\" component={InputPhoto} />\n            </div>\n            <div className={classes.submitButton}>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddPostReduxForm = reduxForm({\n    form: 'ProfileNewPostReduxForm',\n    validate\n})(AddPost)\n\nexport default MyPosts;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addLike, addPost, deletePost } from '../../../redux/profileReducer';\nimport MyPosts from './MyPosts';\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n        auth: state.auth,\n        profileId: state.profilePage.profile\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, {addPost, addLike, deletePost})(MyPosts);\n\nexport default MyPostsContainer;","import React, {useEffect, useState} from \"react\";\nimport classes from './ProfileInfo.module.css';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n    const activatedEditMode = () => {\n        setEditMode(true);\n    }\n    const deactivatedEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n    return (\n        <div className={classes.statusForm}>\n            Status\n            {!editMode\n                ? <div>\n                    <div className={classes.fieldStatus} onDoubleClick={activatedEditMode} >\n                        {props.status}\n                    </div>\n                </div>\n                : <div>\n                    <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deactivatedEditMode} />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import { Field } from \"redux-form\";\r\n\r\nconst Contact = ({ contactTitle, contactValue, editMode, name }) => {\r\n    return (\r\n        <div>\r\n            {editMode \r\n                ? <div>{contactTitle}: <Field placeholder={contactTitle} name={name} component={\"input\"}/></div>\r\n                : contactValue && <div>{contactTitle}: {contactValue}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import Contact from \"./Contact\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Input } from \"../../../Common/FormsControls/FormsControls\";\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit, editMode, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>Full name: <Field placeholder={\"Full name\"} name=\"fullName\" component={\"input\"}/>\r\n            </div>\r\n            <div>About Me: <Field placeholder={\"About me\"} name=\"aboutMe\" component={\"textarea\"}/>\r\n            </div>\r\n            <div>Looking for a job: <Field name=\"lookingForAJob\" component={\"input\"} type=\"checkbox\"/></div>\r\n            <div>My professional skills: <Field placeholder={\"My professional skills\"} name=\"lookingForAJobDescription\" component={\"textarea\"}/></div>\r\n            <div>Contacts: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact error={error} key={key} contactTitle={key} contactValue={profile.contacts[key]} editMode={editMode} name={\"contacts.\" + key}/>\r\n            })}</div>\r\n            <div>\r\n                <button>Save</button>\r\n                {error && <div>{error}</div>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'editProfile'\r\n})(ProfileDataForm)\r\n\r\nconst EditProfileData = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(() => {\r\n            props.exitOfEditMode();\r\n        });\r\n    }\r\n    return (\r\n        <ProfileDataReduxForm onSubmit={onSubmit} {...props}/>\r\n    )\r\n}\r\nexport default EditProfileData;","import Contact from \"./Contact\";\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode, editMode }) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {isOwner && <button onClick={goToEditMode}>Edit</button>}\r\n            </div>\r\n            <div>About Me: {profile.aboutMe}</div>\r\n            <div>Looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n            {profile.lookingForAJob && <div>My professional skills:\r\n                {profile.lookingForAJobDescription}</div>}\r\n            <div>Contacts: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} editMode={editMode}/>\r\n            })}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;","import React, { useState } from \"react\";\nimport classes from './ProfileInfo.module.css';\nimport DefaultIcon from './../../../icons/default_icon_user.png';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\nimport ProfileData from \"./ProfileData/ProfileData\";\n\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\n    let [editMode, setEditMode] = useState(false);\n\n    const goToEditMode = () => {\n        setEditMode(true);\n    }\n\n    const exitOfEditMode = () => {\n        setEditMode(false);\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n    return (\n        <div className={classes.profileInfo}>\n            <div className={classes.descriptionBlock}>\n                <img src={profile.photos.large != null ? profile.photos.large : DefaultIcon} className={classes.photoUser} />\n                <div>\n                    <div className={classes.userName}>{profile.fullName}</div>\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n                </div>\n            </div>\n            {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\n            <div className={classes.aboutUser}>\n                {editMode\n                    ? <ProfileDataForm profile={profile} exitOfEditMode={exitOfEditMode}\n                        saveProfile={saveProfile} editMode={editMode}\n                        initialValues={profile} />\n                    : <ProfileData profile={profile} isOwner={isOwner}\n                        goToEditMode={goToEditMode} editMode={editMode} />}\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\nimport classes from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nconst Profile = (props) => {\n    return (\n        <div>\n            <div className=\"profilePage\">\n                <ProfileInfo profile={props.profile} className={classes.classForProfileInfo}\n                    status={props.status} updateStatus={props.updateStatus}\n                    isOwner={props.isOwner} savePhoto={props.savePhoto}\n                    saveProfile={props.saveProfile} />\n            </div>\n            <div className={classes.postsField}>\n                <MyPostsContainer/>\n            </div>\n        </div>\n    )\n}\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport { user, updateStatus, getStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\nimport Preloader from '../Common/Preloader/Preloader';\nimport { WithAuthRedirect } from '../HOC/WithAuthRedirect';\nimport Profile from './Profile';\n\nclass ProfileContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userID;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n        }\n        this.props.match.params.userID = userId;\n        this.props.user(userId);\n        this.props.getStatus(userId);\n    }\n    componentDidMount() {\n        this.refreshProfile();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(this.props.match.params.userID !== prevProps.match.params.userID) {\n            this.refreshProfile();\n        }\n    }\n    render() {\n        if (!this.props.profile) {\n            return (\n                <Preloader />\n            )\n        }\n        if (this.props.match.params.userID != this.props.profile.userId){\n            return (\n                <Preloader />\n            )\n        }\n        else return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile} \n                    status={this.props.status} updateStatus={this.props.updateStatus}\n                    isOwner={!this.props.match.params.userID} savePhoto={this.props.savePhoto}\n                    saveProfile={this.props.saveProfile}/>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, { user, getStatus, updateStatus, savePhoto, saveProfile }),\n    withRouter,\n    WithAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}