{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","icons/notLiked.png","icons/liked.png","icons/deleteIcon.png","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","icons/changePhoto.png","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileData/Contact.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","authorField","photoUser","src","userPhoto","photoDefault","postAuthor","userLogin","onClick","idPost","postId","deletePost","deleteIcon","message","postMessage","photoURL","postPhoto","postLike","isMyLike","liked","notLiked","addLike","likesCount","quantityLikes","AddPostReduxForm","maxLengthCreator","reduxForm","form","validate","values","errors","newPostText","photo","onSubmit","handleSubmit","inputsField","Field","component","Textarea","name","placeholder","type","InputPhoto","submitButton","MyPosts","profileId","userId","postsElements","posts","reverse","filter","p","postOnIdProfile","map","id","profilePost","postsBlock","length","isNotPosts","addPostField","dispatch","text","document","getElementById","style","backgroundColor","reset","addPost","auth","login","URL","createObjectURL","notPostsField","postsField","MyPostsContainer","connect","state","profilePage","profile","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","isLongStatus","setLongStatus","isError","setError","useEffect","widthTextCurrent","offsetWidth","statusForm","inputStatus","error","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","fieldStatus","onDoubleClick","isOwner","statusWrapped","textStatus","Contact","contactTitle","contactValue","ProfileDataReduxForm","Object","keys","contacts","key","EditProfileData","formData","saveProfile","then","exitOfEditMode","ProfileData","goToEditMode","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo","savePhoto","profileInfo","descriptionBlock","photoUserField","photos","large","DefaultIcon","changePhoto","htmlFor","ChangePhoto","target","files","userName","fullName","aboutUser","initialValues","Profile","classForProfileInfo","ProfileContainer","this","match","params","userID","authorizedUserId","user","getStatus","refreshProfile","prevProps","prevState","Preloader","React","Component","compose","isAuth","withRouter","WithAuthRedirect"],"mappings":"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","file":"static/js/4.b00e69b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2GpXQ\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__B_MVT\",\"userName\":\"ProfileInfo_userName__2EWdc\",\"photoUserField\":\"ProfileInfo_photoUserField__2-xIv\",\"photoUser\":\"ProfileInfo_photoUser__20LnI\",\"changePhoto\":\"ProfileInfo_changePhoto__2z56q\",\"aboutUser\":\"ProfileInfo_aboutUser__2gw2h\",\"fieldStatus\":\"ProfileInfo_fieldStatus__2V4j4\",\"inputStatus\":\"ProfileInfo_inputStatus__1WVUN\",\"statusWrapped\":\"ProfileInfo_statusWrapped__1ENo-\",\"textStatus\":\"ProfileInfo_textStatus__3wJnS\",\"scroll-left\":\"ProfileInfo_scroll-left__2mXZN\",\"statusForm\":\"ProfileInfo_statusForm__3MVNw\",\"error\":\"ProfileInfo_error__HNzBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__35GIG\",\"posts\":\"MyPosts_posts__2EkbX\",\"addPostField\":\"MyPosts_addPostField__1Dke4\",\"isNotPosts\":\"MyPosts_isNotPosts__1cEuu\",\"postsField\":\"MyPosts_postsField__1KSUr\",\"notPostsField\":\"MyPosts_notPostsField__2Us_a\",\"inputsField\":\"MyPosts_inputsField__2CDyi\",\"submitButton\":\"MyPosts_submitButton__7YQVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1ReU8\",\"authorField\":\"Post_authorField__Wi4lg\",\"postAuthor\":\"Post_postAuthor__2_wGK\",\"photoUser\":\"Post_photoUser__2BorF\",\"deleteIcon\":\"Post_deleteIcon__2kFok\",\"postMessage\":\"Post_postMessage__3G64y\",\"postLike\":\"Post_postLike__3bY9T\",\"postPhoto\":\"Post_postPhoto__gwgHk\",\"likesCount\":\"Post_likesCount__26PlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"classForProfileInfo\":\"Profile_classForProfileInfo__3yPKH\",\"postsField\":\"Profile_postsField__fROIp\"};","export default __webpack_public_path__ + \"static/media/notLiked.b4db63fd.png\";","export default __webpack_public_path__ + \"static/media/liked.4dabba7b.png\";","export default __webpack_public_path__ + \"static/media/deleteIcon.cc77b84b.png\";","import classes from './Post.module.css';\nimport photoDefault from '../../../../icons/default_icon_user.png';\nimport notLiked from '../../../../icons/notLiked.png';\nimport liked from '../../../../icons/liked.png';\nimport deleteIcon from '../../../../icons/deleteIcon.png';\n\nconst Post = (props) => {\n    const setLike = (idPost) => {\n        props.addLike(idPost);\n    }\n\n    const setDeleted = (idPost) => {\n        props.deletePost(idPost);\n    }\n\n    return (\n        <div className={classes.item}>\n            <div className={classes.authorField}>\n                <div className={classes.photoUser}>\n                    <img src={props.userPhoto ? props.userPhoto : photoDefault} />\n                </div>\n                <div className={classes.postAuthor}>\n                    {props.userLogin}\n                </div>\n                <div onClick={() => setDeleted(props.postId)} className={classes.deleteIcon}>\n                    <img src={deleteIcon} />\n                </div>\n            </div>\n            {props.message && <div className={classes.postMessage}>\n                {props.message}\n            </div>}\n            {props.photoURL && <div className={classes.postPhoto}>\n                <img src={props.photoURL} />\n            </div>}\n            <div className={classes.postLike}>\n                <div >\n                    <img src={!props.isMyLike ? notLiked : liked} onClick={() => setLike(props.postId)}/>\n                </div>\n                <div className={classes.likesCount}>{props.quantityLikes}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { reduxForm, Field, reset } from \"redux-form\";\nimport { required, maxLengthCreator } from '../../../Utils/Validators/Validator';\nimport { Input, InputPhoto, Textarea } from '../../Common/FormsControls/FormsControls';\n\nconst validate = values => {\n    const errors = {};\n\n    if (!values.newPostText && !values.photo)\n        errors.newPostText = \"This field is empty\";\n    return errors;\n}\n\nconst MyPosts = (props) => {\n    let profileId = props.profileId && props.profileId.userId;\n    let postsElements = [...props.posts].reverse().filter(p => p.postOnIdProfile === profileId).map(p => (\n        <Post message={p.message} quantityLikes={p.likesCount} key={p.id} photoURL={p.photoURL} \n            userId={p.userId} userLogin={p.userLogin} userPhoto={p.userPhoto} postId={p.id} \n            addLike={props.addLike} isMyLike={p.isMyLike} deletePost={props.deletePost}/>));\n\n    let profilePost = [...props.posts].reverse().filter(p => p.postOnIdProfile === profileId);\n\n    let addNewPost = (values, dispatch) => {\n        let text = values.newPostText;\n        let photo = values.photo;\n        document.getElementById(\"loadingPhoto\").style.backgroundColor = \"\";\n        dispatch(reset(\"ProfileNewPostReduxForm\"));\n        props.addPost(profileId, props.auth.userId, props.auth.login, props.auth.photoUser, text, photo && URL.createObjectURL(photo));\n    }\n\n    return (\n        <div className={classes.postsBlock}>\n            <div className={profilePost.length === 0 ? classes.isNotPosts : classes.addPostField}>\n                <h3>Add post</h3>\n                <AddPostReduxForm onSubmit={addNewPost} />\n            </div>\n            <div className={profilePost.length === 0 ? classes.notPostsField : classes.postsField}>\n                <h2>Posts</h2>\n                <div className={classes.posts}>\n                    {postsElements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst AddPost = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div className={classes.inputsField}>\n                <Field component={Textarea} name=\"newPostText\" placeholder=\"Input text\" />\n                <Field name=\"photo\" type=\"file\" component={InputPhoto} />\n            </div>\n            <div className={classes.submitButton}>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddPostReduxForm = reduxForm({\n    form: 'ProfileNewPostReduxForm',\n    validate\n})(AddPost)\n\nexport default MyPosts;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addLike, addPost, deletePost } from '../../../redux/profileReducer';\nimport MyPosts from './MyPosts';\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n        auth: state.auth,\n        profileId: state.profilePage.profile\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, {addPost, addLike, deletePost})(MyPosts);\n\nexport default MyPostsContainer;","export default __webpack_public_path__ + \"static/media/changePhoto.98eb835d.png\";","import React, { useEffect, useState } from \"react\";\nimport classes from './ProfileInfo.module.css';\nimport { reduxForm, Field } from \"redux-form\";\nimport { Input } from '../../Common/FormsControls/FormsControls';\nimport { required } from \"../../../Utils/Validators/Validator\";\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n    let [isLongStatus, setLongStatus] = useState(false);\n    let [isError, setError] = useState();\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    useEffect(() => {\n        setStatus(props.status);\n        let widthTextCurrent = document.getElementById(\"fieldStatus\") && document.getElementById(\"fieldStatus\").offsetWidth;\n        if (widthTextCurrent > 145)\n            setLongStatus(true);\n        else\n            setLongStatus(false);\n    }, [props.status]);\n\n    const activatedEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivatedEditMode = () => {\n        if(status.length < 100) {\n            setError();\n            setEditMode(false);\n            props.updateStatus(status);\n        }\n        else {\n            setError(\"Must be 9 characters or less\");\n        }\n    }\n\n    return (\n        <div className={classes.statusForm}>\n            Status\n            {!editMode\n                ? <div>\n                    <div className={classes.fieldStatus} onDoubleClick={props.isOwner && activatedEditMode}>\n                        <div className={classes.statusWrapped}>\n                            <span id=\"fieldStatus\" className={(isLongStatus && classes.textStatus)} >\n                                {props.status}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                : <div className={classes.inputStatus}>\n                    <div className={isError && classes.error}>\n                        <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deactivatedEditMode}/>\n                    </div>\n                    {isError && <span>{isError}</span>}\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import { Field } from \"redux-form\";\r\n\r\nconst Contact = ({ contactTitle, contactValue, editMode, name }) => {\r\n    return (\r\n        <div>\r\n            {editMode \r\n                ? <div>{contactTitle}: <Field placeholder={contactTitle} name={name} component={\"input\"}/></div>\r\n                : contactValue && <div>{contactTitle}: {contactValue}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import Contact from \"./Contact\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Input } from \"../../../Common/FormsControls/FormsControls\";\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit, editMode, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>Full name: <Field placeholder={\"Full name\"} name=\"fullName\" component={\"input\"}/>\r\n            </div>\r\n            <div>About Me: <Field placeholder={\"About me\"} name=\"aboutMe\" component={\"textarea\"}/>\r\n            </div>\r\n            <div>Looking for a job: <Field name=\"lookingForAJob\" component={\"input\"} type=\"checkbox\"/></div>\r\n            <div>My professional skills: <Field placeholder={\"My professional skills\"} name=\"lookingForAJobDescription\" component={\"textarea\"}/></div>\r\n            <div>Contacts: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact error={error} key={key} contactTitle={key} contactValue={profile.contacts[key]} editMode={editMode} name={\"contacts.\" + key}/>\r\n            })}</div>\r\n            <div>\r\n                <button>Save</button>\r\n                {error && <div>{error}</div>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'editProfile'\r\n})(ProfileDataForm)\r\n\r\nconst EditProfileData = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(() => {\r\n            props.exitOfEditMode();\r\n        });\r\n    }\r\n    return (\r\n        <ProfileDataReduxForm onSubmit={onSubmit} {...props}/>\r\n    )\r\n}\r\nexport default EditProfileData;","import Contact from \"./Contact\";\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode, editMode }) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {isOwner && <button onClick={goToEditMode}>Edit</button>}\r\n            </div>\r\n            <div>About Me: {profile.aboutMe}</div>\r\n            <div>Looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n            {profile.lookingForAJob && <div>My professional skills:\r\n                {profile.lookingForAJobDescription}</div>}\r\n            <div>Contacts: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} editMode={editMode}/>\r\n            })}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;","import React, { useState } from \"react\";\nimport classes from './ProfileInfo.module.css';\nimport DefaultIcon from './../../../icons/default_icon_user.png';\nimport ChangePhoto from './../../../icons/changePhoto.png';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\nimport ProfileData from \"./ProfileData/ProfileData\";\n\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\n    let [editMode, setEditMode] = useState(false);\n\n    const goToEditMode = () => {\n        setEditMode(true);\n    }\n\n    const exitOfEditMode = () => {\n        setEditMode(false);\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n    return (\n        <div className={classes.profileInfo}>\n            <div className={classes.descriptionBlock}>\n                <div className={classes.photoUserField}>\n                    <img src={profile.photos.large !== null ? profile.photos.large : DefaultIcon} className={classes.photoUser} />\n                    {isOwner &&\n                        <div className={classes.changePhoto}>\n                            <label htmlFor=\"newPhoto\">\n                                <img src={ChangePhoto}/>\n                            </label>\n                            <input type={\"file\"} onChange={onMainPhotoSelected} id=\"newPhoto\" />\n                        </div>}\n                </div>\n                <div>\n                    <div className={classes.userName}>{profile.fullName}</div>\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} isOwner={isOwner} />\n                </div>\n            </div>\n            <div className={classes.aboutUser}>\n                {editMode\n                    ? <ProfileDataForm profile={profile} exitOfEditMode={exitOfEditMode}\n                        saveProfile={saveProfile} editMode={editMode}\n                        initialValues={profile} />\n                    : <ProfileData profile={profile} isOwner={isOwner}\n                        goToEditMode={goToEditMode} editMode={editMode} />}\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\nimport classes from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nconst Profile = (props) => {\n    return (\n        <div>\n            <div className=\"profilePage\">\n                <ProfileInfo profile={props.profile} className={classes.classForProfileInfo}\n                    status={props.status} updateStatus={props.updateStatus}\n                    isOwner={props.isOwner} savePhoto={props.savePhoto}\n                    saveProfile={props.saveProfile} />\n            </div>\n            <div className={classes.postsField}>\n                <MyPostsContainer/>\n            </div>\n        </div>\n    )\n}\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport { user, updateStatus, getStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\nimport Preloader from '../Common/Preloader/Preloader';\nimport { WithAuthRedirect } from '../HOC/WithAuthRedirect';\nimport Profile from './Profile';\n\nclass ProfileContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userID;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n        }\n        this.props.match.params.userID = userId;\n        this.props.user(userId);\n        this.props.getStatus(userId);\n    }\n    componentDidMount() {\n        this.refreshProfile();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(this.props.match.params.userID !== prevProps.match.params.userID) {\n            this.refreshProfile();\n        }\n    }\n    render() {\n        if (!this.props.profile || (this.props.profile && (this.props.match.params.userID != this.props.profile.userId))) {\n            return (\n                <Preloader />\n            )\n        }\n        else return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile} \n                    status={this.props.status} updateStatus={this.props.updateStatus}\n                    isOwner={this.props.match.params.userID === this.props.authorizedUserId}\n                    savePhoto={this.props.savePhoto} saveProfile={this.props.saveProfile}/>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, { user, getStatus, updateStatus, savePhoto, saveProfile }),\n    withRouter,\n    WithAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}