{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileData/Contact.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","authorField","photoUser","src","userPhoto","photoDefault","postAuthor","userLogin","message","postMessage","postPhoto","photoURL","postLike","quantityLikes","AddPostReduxForm","maxLengthCreator","reduxForm","form","validate","values","errors","newPostText","photo","onSubmit","handleSubmit","inputsField","Field","component","Textarea","name","placeholder","type","InputPhoto","submitButton","MyPosts","postsElements","posts","reverse","map","p","likesCount","userId","id","postsBlock","addPostField","dispatch","text","document","getElementById","style","backgroundColor","reset","addPost","auth","login","URL","createObjectURL","length","postsField","MyPostsContainer","connect","state","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","statusForm","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","fieldStatus","onDoubleClick","Contact","contactTitle","contactValue","ProfileDataReduxForm","profile","error","Object","keys","contacts","key","EditProfileData","formData","saveProfile","then","exitOfEditMode","ProfileData","isOwner","goToEditMode","onClick","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo","savePhoto","profileInfo","descriptionBlock","photos","large","DefaultIcon","userName","fullName","target","files","aboutUser","initialValues","Preloader","Profile","classForProfileInfo","ProfileContainer","this","match","params","userID","authorizedUserId","user","getStatus","refreshProfile","prevProps","prevState","React","Component","compose","isAuth","withRouter","WithAuthRedirect"],"mappings":"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","file":"static/js/4.5017cd13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2GpXQ\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__B_MVT\",\"userName\":\"ProfileInfo_userName__2EWdc\",\"photoUser\":\"ProfileInfo_photoUser__20LnI\",\"aboutUser\":\"ProfileInfo_aboutUser__2gw2h\",\"fieldStatus\":\"ProfileInfo_fieldStatus__2V4j4\",\"statusForm\":\"ProfileInfo_statusForm__3MVNw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__35GIG\",\"posts\":\"MyPosts_posts__2EkbX\",\"addPostField\":\"MyPosts_addPostField__1Dke4\",\"postsField\":\"MyPosts_postsField__1KSUr\",\"inputsField\":\"MyPosts_inputsField__2CDyi\",\"submitButton\":\"MyPosts_submitButton__7YQVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1ReU8\",\"authorField\":\"Post_authorField__Wi4lg\",\"postAuthor\":\"Post_postAuthor__2_wGK\",\"photoUser\":\"Post_photoUser__2BorF\",\"postMessage\":\"Post_postMessage__3G64y\",\"postLike\":\"Post_postLike__3bY9T\",\"postPhoto\":\"Post_postPhoto__gwgHk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"classForProfileInfo\":\"Profile_classForProfileInfo__3yPKH\",\"postsField\":\"Profile_postsField__fROIp\"};","import classes from './Post.module.css';\nimport photoDefault from '../../../../icons/default_icon_user.png';\n\nconst Post = (props) => {\n    return (\n        <div className={classes.item}>\n            <div className={classes.authorField}>\n                <div className={classes.photoUser}>\n                    <img src={props.userPhoto ? props.userPhoto : photoDefault} />\n                </div>\n                <div className={classes.postAuthor}>\n                    {props.userLogin}\n                </div>\n            </div>\n            {props.message && <div className={classes.postMessage}>\n                {props.message}\n            </div>}\n            <div className={classes.postPhoto}>\n                {props.photoURL && <img src={props.photoURL}/>}\n            </div>\n            <div className={classes.postLike}>\n                <span>{props.quantityLikes} like</span>\n            </div>\n        </div>\n    )\n}\nexport default Post;","import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { reduxForm, Field, reset } from \"redux-form\";\nimport { required, maxLengthCreator } from '../../../Utils/Validators/Validator';\nimport { Input, InputPhoto, Textarea } from '../../Common/FormsControls/FormsControls';\n\nconst validate = values => {\n    const errors = {};\n\n    if (!values.newPostText && !values.photo)\n        errors.newPostText = \"This field is empty\";\n    return errors;\n}\n\nconst MyPosts = (props) => {\n    let postsElements = [...props.posts].reverse().map(p => (\n        <Post message={p.message} quantityLikes={p.likesCount} key={p.id} photoURL={p.photoURL} \n            userId={p.userId} userLogin={p.userLogin} userPhoto={p.userPhoto}/>));\n\n    let addNewPost = (values, dispatch) => {\n        let text = values.newPostText;\n        let photo = values.photo;\n        document.getElementById(\"loadingPhoto\").style.backgroundColor = \"\";\n        dispatch(reset(\"ProfileNewPostReduxForm\"));\n        props.addPost(props.auth.userId, props.auth.login, props.auth.photoUser, text, photo && URL.createObjectURL(photo));\n    }\n    return (\n        <div className={classes.postsBlock}>\n            <div className={classes.addPostField}>\n                <h3>Add post</h3>\n                <AddPostReduxForm onSubmit={addNewPost} />\n            </div>\n            {props.posts.length > 0 && <div className={classes.postsField}>\n                <h2>My posts</h2>\n                <div className={classes.posts}>\n                    {postsElements}\n                </div>\n            </div>}\n        </div>\n    )\n}\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst AddPost = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div className={classes.inputsField}>\n                <Field component={Textarea} name=\"newPostText\" placeholder=\"Input text\" />\n                <Field name=\"photo\" type=\"file\" component={InputPhoto} />\n            </div>\n            <div className={classes.submitButton}>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddPostReduxForm = reduxForm({\n    form: 'ProfileNewPostReduxForm',\n    validate\n})(AddPost)\n\nexport default MyPosts;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../../redux/profileReducer';\nimport MyPosts from './MyPosts';\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n        auth: state.auth\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\n\nexport default MyPostsContainer;","import React, {useEffect, useState} from \"react\";\nimport classes from './ProfileInfo.module.css';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n    const activatedEditMode = () => {\n        setEditMode(true);\n    }\n    const deactivatedEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n    return (\n        <div className={classes.statusForm}>\n            Status\n            {!editMode\n                ? <div>\n                    <div className={classes.fieldStatus} onDoubleClick={activatedEditMode} >\n                        {props.status}\n                    </div>\n                </div>\n                : <div>\n                    <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deactivatedEditMode} />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import { Field } from \"redux-form\";\r\n\r\nconst Contact = ({ contactTitle, contactValue, editMode, name }) => {\r\n    return (\r\n        <div>\r\n            {editMode \r\n                ? <div>{contactTitle}: <Field placeholder={contactTitle} name={name} component={\"input\"}/></div>\r\n                : contactValue && <div>{contactTitle}: {contactValue}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import Contact from \"./Contact\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Input } from \"../../../Common/FormsControls/FormsControls\";\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit, editMode, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>Full name: <Field placeholder={\"Full name\"} name=\"fullName\" component={\"input\"}/>\r\n            </div>\r\n            <div>About Me: <Field placeholder={\"About me\"} name=\"aboutMe\" component={\"textarea\"}/>\r\n            </div>\r\n            <div>Looking for a job: <Field name=\"lookingForAJob\" component={\"input\"} type=\"checkbox\"/></div>\r\n            <div>My professional skills: <Field placeholder={\"My professional skills\"} name=\"lookingForAJobDescription\" component={\"textarea\"}/></div>\r\n            <div>Contacts: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact error={error} key={key} contactTitle={key} contactValue={profile.contacts[key]} editMode={editMode} name={\"contacts.\" + key}/>\r\n            })}</div>\r\n            <div>\r\n                <button>Save</button>\r\n                {error && <div>{error}</div>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'editProfile'\r\n})(ProfileDataForm)\r\n\r\nconst EditProfileData = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(() => {\r\n            props.exitOfEditMode();\r\n        });\r\n    }\r\n    return (\r\n        <ProfileDataReduxForm onSubmit={onSubmit} {...props}/>\r\n    )\r\n}\r\nexport default EditProfileData;","import Contact from \"./Contact\";\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode, editMode }) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {isOwner && <button onClick={goToEditMode}>Edit</button>}\r\n            </div>\r\n            <div>About Me: {profile.aboutMe}</div>\r\n            <div>Looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n            {profile.lookingForAJob && <div>My professional skills:\r\n                {profile.lookingForAJobDescription}</div>}\r\n            <div>Contacts: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} editMode={editMode}/>\r\n            })}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;","import React, { useState } from \"react\";\nimport classes from './ProfileInfo.module.css';\nimport DefaultIcon from './../../../icons/default_icon_user.png';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\nimport ProfileData from \"./ProfileData/ProfileData\";\n\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\n    let [editMode, setEditMode] = useState(false);\n\n    const goToEditMode = () => {\n        setEditMode(true);\n    }\n\n    const exitOfEditMode = () => {\n        setEditMode(false);\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n    if (!profile) {\n        return (\n            <Preloader />\n        )\n    }\n    else {\n        return (\n            <div className={classes.profileInfo}>\n                <div className={classes.descriptionBlock}>\n                    <img src={profile.photos.large != null ? profile.photos.large : DefaultIcon} className={classes.photoUser} />\n                    <div>\n                        <div className={classes.userName}>{profile.fullName}</div>\n                        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n                    </div>\n                </div>\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\n                <div className={classes.aboutUser}>\n                    {editMode\n                        ? <ProfileDataForm profile={profile} exitOfEditMode={exitOfEditMode}\n                            saveProfile={saveProfile} editMode={editMode}\n                            initialValues={profile} />\n                        : <ProfileData profile={profile} isOwner={isOwner}\n                            goToEditMode={goToEditMode} editMode={editMode} />}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\nimport classes from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nconst Profile = (props) => {\n    return (\n        <div>\n            <div className=\"profilePage\">\n                <ProfileInfo profile={props.profile} className={classes.classForProfileInfo}\n                    status={props.status} updateStatus={props.updateStatus}\n                    isOwner={props.isOwner} savePhoto={props.savePhoto}\n                    saveProfile={props.saveProfile} />\n            </div>\n            <div className={classes.postsField}>\n                <MyPostsContainer/>\n            </div>\n        </div>\n    )\n}\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport { user, updateStatus, getStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\nimport { WithAuthRedirect } from '../HOC/WithAuthRedirect';\nimport Profile from './Profile';\n\nclass ProfileContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userID;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n        }\n        this.props.user(userId);\n        this.props.getStatus(userId);\n    }\n    componentDidMount() {\n        this.refreshProfile();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(this.props.match.params.userID !== prevProps.match.params.userID)\n            this.refreshProfile();\n    }\n    render() {\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile} \n                    status={this.props.status} updateStatus={this.props.updateStatus}\n                    isOwner={!this.props.match.params.userID} savePhoto={this.props.savePhoto}\n                    saveProfile={this.props.saveProfile}/>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, { user, getStatus, updateStatus, savePhoto, saveProfile }),\n    withRouter,\n    WithAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}